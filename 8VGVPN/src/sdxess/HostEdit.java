/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sdxess;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author kotaro
 */
public class HostEdit extends javax.swing.JFrame {
    private javax.swing.table.DefaultTableModel tableModel;
    private StringBuilder sb = new StringBuilder();
    private BufferedReader br = null;
    private ArrayList<Website> websites;
    private String windowName = "";
    
   
    /***************************************************************************
    ***  brief                                                               ***
    ***  serial number ????                                                  ***
    ***  parameter out <none>                                                ***
    ***  parameter in  <none>                                                ***
    ***  return <none>                                                       ***
    *** @param                                                               ***
    ***************************************************************************/
    public HostEdit(ArrayList<Website> websites)  {
        initComponents();
        this.windowName = this.getTitle();
        this.websites = websites;
        this.updateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        sitesTable = new javax.swing.JTable();
        delBtn = new javax.swing.JButton();
        detailBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Websites");

        addBtn.setText("Add Website");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        sitesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        sitesTable.setEditingColumn(0);
        sitesTable.setEditingRow(0);
        jScrollPane1.setViewportView(sitesTable);

        delBtn.setText("Delete Website");
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });

        detailBtn.setText("details");
        detailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(addBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(detailBtn))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(delBtn)
                    .addComponent(detailBtn)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /***************************************************************************
    ***  brief                                                               ***
    ***  serial number ????                                                  ***
    ***  parameter out <none>                                                ***
    ***  parameter in  <none>                                                ***
    ***  return <none>                                                       ***
    *** @param                                                               ***
    ***************************************************************************/
    public static void restartDNS(){
        try {
            ProcessBuilder builder = new ProcessBuilder("cmd.exe", "/c", "" );
            Process process;
        
            process = builder.start();      

            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line="";

            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
        
        } catch (IOException ex) {
            Logger.getLogger(HostEdit.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void updateTable(){
        this.tableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Website" , "Rerouted IP"
            }
        );
        
        for( int i = 0 ; i < this.websites.size() ; i++ ){
            Website website = this.websites.get(i);
            this.tableModel.addRow(new Object[]{ website.name , website.IP });
        }

        sitesTable.setModel(this.tableModel);
    }
    
    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        if( sitesTable.getSelectedRow() != -1 ){
            int indexes[] = sitesTable.getSelectedRows();
            ArrayList<Website> websites2remove = new ArrayList<Website>();
            for( int index : indexes ){
                websites2remove.add(this.websites.get(index));
            }
            for( Website website : websites2remove ){
                website.deleteRouting();
            }
            this.websites.removeAll(websites2remove);
            this.updateTable();
        }
    }//GEN-LAST:event_delBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        String domain = JOptionPane.showInputDialog(this, "Enter Domain name" , "8vg.org");
        if ( Website.isValidDomainName(domain) ) {
            this.addWebsite(domain);
        } else {
            JOptionPane.showMessageDialog(this, domain + " is not a valid Domain name", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void detailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailBtnActionPerformed
         if( sitesTable.getSelectedRow() != -1 ){
            Website website = this.websites.get(sitesTable.getSelectedRow());
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new details(website).setVisible(true);
                }
            });
        }
    }//GEN-LAST:event_detailBtnActionPerformed

    public void addWebsite(String domain){
        addBtn.setEnabled(false);
        delBtn.setEnabled(false);
        detailBtn.setEnabled(false);
        sitesTable.setEnabled(false);
        
        this.setTitle( this.windowName + " - ( Crawling " + domain + " IP's... )");
        
        ExecutorTask.setTimeout(() -> this.addWebsiteAsync(domain), 10);
    }
    
    private void addWebsiteAsync(String domain){
        Website website = new Website(domain);
        if( website.isValid ){
            this.websites.add(website);
            website.route();
            this.updateTable();
        }else{
            JOptionPane.showMessageDialog(this, domain + " not found!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        this.setTitle(this.windowName);
        addBtn.setEnabled(true);
        delBtn.setEnabled(true);
        detailBtn.setEnabled(true);
        sitesTable.setEnabled(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton delBtn;
    private javax.swing.JButton detailBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable sitesTable;
    // End of variables declaration//GEN-END:variables
}
